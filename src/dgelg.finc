!*==dgelg.f90 processed by SPAG 8.01RF 00:35  2 Mar 2025

!
!     ..................................................................
!
!        SUBROUTINE DGELG
!
!        PURPOSE
!           TO SOLVE A GENERAL SYSTEM OF SIMULTANEOUS LINEAR EQUATIONS.
!
!        USAGE
!           CALL DGELG(R,A,M,N,EPS,IER)
!
!        DESCRIPTION OF PARAMETERS
!           R      - DOUBLE PRECISION M BY N RIGHT HAND SIDE MATRIX
!                    (DESTROYED). ON RETURN R CONTAINS THE SOLUTIONS
!                    OF THE EQUATIONS.
!           A      - DOUBLE PRECISION M BY M COEFFICIENT MATRIX
!                    (DESTROYED).
!           M      - THE NUMBER OF EQUATIONS IN THE SYSTEM.
!           N      - THE NUMBER OF RIGHT HAND SIDE VECTORS.
!           EPS    - SINGLE PRECISION INPUT CONSTANT WHICH IS USED AS
!                    RELATIVE TOLERANCE FOR TEST ON LOSS OF
!                    SIGNIFICANCE.
!           IER    - RESULTING ERROR PARAMETER CODED AS FOLLOWS
!                    IER=0  - NO ERROR,
!                    IER=-1 - NO RESULT BECAUSE OF M LESS THAN 1 OR
!                             PIVOT ELEMENT AT ANY ELIMINATION STEP
!                             EQUAL TO 0,
!                    IER=K  - WARNING DUE TO POSSIBLE LOSS OF SIGNIFI-
!                             CANCE INDICATED AT ELIMINATION STEP K+1,
!                             WHERE PIVOT ELEMENT WAS LESS THAN OR
!                             EQUAL TO THE INTERNAL TOLERANCE EPS TIMES
!                             ABSOLUTELY GREATEST ELEMENT OF MATRIX A.
!
!        REMARKS
!           INPUT MATRICES R AND A ARE ASSUMED TO BE STORED COLUMNWISE
!           IN M*N RESP. M*M SUCCESSIVE STORAGE LOCATIONS. ON RETURN
!           SOLUTION MATRIX R IS STORED COLUMNWISE TOO.
!           THE PROCEDURE GIVES RESULTS IF THE NUMBER OF EQUATIONS M IS
!           GREATER THAN 0 AND PIVOT ELEMENTS AT ALL ELIMINATION STEPS
!           ARE DIFFERENT FROM 0. HOWEVER WARNING IER=K - IF GIVEN -
!           INDICATES POSSIBLE LOSS OF SIGNIFICANCE. IN CASE OF A WELL
!           SCALED MATRIX A AND APPROPRIATE TOLERANCE EPS, IER=K MAY BE
!           INTERPRETED THAT MATRIX A HAS THE RANK K. NO WARNING IS
!           GIVEN IN CASE M=1.
!
!        SUBROUTINES AND FUNCTION SUBPROGRAMS REQUIRED
!           NONE
!
!        METHOD
!           SOLUTION IS DONE BY MEANS OF GAUSS-ELIMINATION WITH
!           COMPLETE PIVOTING.
!
!     ..................................................................
!
SUBROUTINE dgelg(R,A,M,N,Eps,Ier)
   IMPLICIT NONE

   REAL Eps
   INTEGER i,Ier,ii,ist,j,k,l,lend,ll,lst,M,mm,N,nm

!
!
   DIMENSION A(*),R(*)
   DOUBLE PRECISION R,A,piv,tb,tol,pivi
   IF ( M>0 ) THEN
!
!     SEARCH FOR GREATEST ELEMENT IN MATRIX A
      Ier = 0
      piv = 0.D0
      mm = M*M
      nm = N*M
      DO l = 1,mm
         tb = dabs(A(l))
         IF ( tb>piv ) THEN
            piv = tb
            i = l
         ENDIF
      ENDDO
      tol = Eps*piv
!     A(I) IS PIVOT ELEMENT. PIV CONTAINS THE ABSOLUTE VALUE OF A(I).
!
!
!     START ELIMINATION LOOP
      lst = 1
      SPAG_Loop_1_1: DO k = 1,M
!
!     TEST ON SINGULARITY
         IF ( piv<=0 ) THEN
            CALL spag_block_1
            RETURN
         ENDIF
         IF ( Ier==0 ) THEN
            IF ( piv<=tol ) Ier = k - 1
         ENDIF
         pivi = 1.D0/A(i)
         j = (i-1)/M
         i = i - j*M - k
         j = j + 1 - k
!     I+K IS ROW-INDEX, J+K COLUMN-INDEX OF PIVOT ELEMENT
!
!     PIVOT ROW REDUCTION AND ROW INTERCHANGE IN RIGHT HAND SIDE R
         DO l = k,nm,M
            ll = l + i
            tb = pivi*R(ll)
            R(ll) = R(l)
            R(l) = tb
         ENDDO
!
!     IS ELIMINATION TERMINATED
         IF ( k>=M ) EXIT SPAG_Loop_1_1
!
!     COLUMN INTERCHANGE IN MATRIX A
         lend = lst + M - k
         IF ( j>0 ) THEN
            ii = j*M
            DO l = lst,lend
               tb = A(l)
               ll = l + ii
               A(l) = A(ll)
               A(ll) = tb
            ENDDO
         ENDIF
!
!     ROW INTERCHANGE AND PIVOT ROW REDUCTION IN MATRIX A
         DO l = lst,mm,M
            ll = l + i
            tb = pivi*A(ll)
            A(ll) = A(l)
            A(l) = tb
         ENDDO
!
!     SAVE COLUMN INTERCHANGE INFORMATION
         A(lst) = j
!
!     ELEMENT REDUCTION AND NEXT PIVOT SEARCH
         piv = 0.D0
         lst = lst + 1
         j = 0
         DO ii = lst,lend
            pivi = -A(ii)
            ist = ii + M
            j = j + 1
            DO l = ist,mm,M
               ll = l - j
               A(l) = A(l) + pivi*A(ll)
               tb = dabs(A(l))
               IF ( tb>piv ) THEN
                  piv = tb
                  i = l
               ENDIF
            ENDDO
            DO l = k,nm,M
               ll = l + j
               R(ll) = R(ll) + pivi*R(l)
            ENDDO
         ENDDO
         lst = lst + M
      ENDDO SPAG_Loop_1_1
!     END OF ELIMINATION LOOP
!
!
!     BACK SUBSTITUTION AND BACK INTERCHANGE
      IF ( M<1 ) THEN
         CALL spag_block_1
         RETURN
      ENDIF
      IF ( M/=1 ) THEN
         ist = mm + M
         lst = M + 1
         DO i = 2,M
            ii = lst - i
            ist = ist - lst
            l = ist - M
            l = A(l) + .5D0
            DO j = ii,nm,M
               tb = R(j)
               ll = j
               DO k = ist,mm,M
                  ll = ll + 1
                  tb = tb - A(k)*R(ll)
               ENDDO
               k = j + l
               R(j) = R(k)
               R(k) = tb
            ENDDO
         ENDDO
      ENDIF
      RETURN
   ENDIF
   CALL spag_block_1
CONTAINS
   SUBROUTINE spag_block_1
!
!
!     ERROR RETURN
      Ier = -1
   END SUBROUTINE spag_block_1
END SUBROUTINE dgelg

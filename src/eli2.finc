!*==eli2.f90 processed by SPAG 8.01RF 00:35  2 Mar 2025

!
!     ..................................................................
!
!        SUBROUTINE ELI2
!
!        PURPOSE
!           COMPUTES THE GENERALIZED ELLIPTIC INTEGRAL OF SECOND KIND
!
!        USAGE
!           CALL ELI2(R,X,CK,A,B)
!
!        DESCRIPTION OF PARAMETERS
!           R     - RESULT VALUE
!           X     - UPPER INTEGRATION BOUND (ARGUMENT OF ELLIPTIC
!                   INTEGRAL OF SECOND KIND)
!           CK    - COMPLEMENTARY MODULUS
!           A     - CONSTANT TERM IN NUMERATOR
!           B     - QUADRATIC TERM IN NUMERATOR
!
!        REMARKS
!           MODULUS K = SQRT(1.-CK*CK).
!           SPECIAL CASES OF THE GENERALIZED ELLIPTIC INTEGRAL OF
!           SECOND KIND ARE
!           F(ATAN(X),K) OBTAINED WITH A=1., B=1.
!           E(ATAN(X),K) OBTAINED WITH A=1., B=CK*CK.
!           B(ATAN(X),K) OBTAINED WITH A=1., B=0.
!           D(ATAN(X),K) OBTAINED WITH A=0., B=1.
!
!        SUBROUTINES AND FUNCTION SUBPROGRAMS REQUIRED
!           NONE
!
!        METHOD
!           DEFINITION
!           R=INTEGRAL((A+B*T*T)/(SQRT((1+T*T)*(1+(CK*T)**2))*(1+T*T)),
!                  SUMMED OVER T FROM 0 TO X).
!           EQUIVALENT IS THE DEFINITION
!           R=INTEGRAL((A+(B-A)*(SIN(T))**2)/SQRT(1-(K*SIN(T))**2),
!                  SUMMED OVER T FROM 0 TO ATAN(X)).
!           EVALUATION
!           LANDENS TRANSFORMATION IS USED FOR CALCULATION.
!           REFERENCE
!           R. BULIRSCH, NUMERICAL CALCULATION OF ELLIPTIC INTEGRALS AND
!                  ELLIPTIC FUNCTIONS
!                  HANDBOOK SERIES OF SPECIAL FUNCTIONS
!                  NUMERISCHE MATHEMATIK VOL. 7, 1965, PP. 78-90.
!
!     ..................................................................
!
SUBROUTINE eli2(R,X,Ck,A,B)
   IMPLICIT NONE

   REAL A,aa,aang,aari,an,ang,ari,B,c,Ck,d,geo,p,pim,pima,R,sgeo,X
   INTEGER isi

   INTEGER :: spag_nextblock_1
   spag_nextblock_1 = 1
   SPAG_DispatchLoop_1: DO
      SELECT CASE (spag_nextblock_1)
      CASE (1)
!        TEST ARGUMENT
         IF ( X/=0 ) THEN
!        TEST MODULUS
            c = 0.
            d = 0.5
            IF ( Ck/=0 ) THEN
!        INITIALIZATION
               an = (B+A)*0.5
               aa = A
               R = B
               ang = abs(1./X)
               pim = 0.
               isi = 0
               ari = 1.
               geo = abs(Ck)
               spag_nextblock_1 = 3
               CYCLE SPAG_DispatchLoop_1
            ELSE
               R = sqrt(1.+X*X)
               R = (A-B)*abs(X)/R + B*alog(abs(X)+R)
            ENDIF
         ELSE
            R = 0.
            RETURN
         ENDIF
         spag_nextblock_1 = 2
      CASE (2)
!        TEST SIGN OF ARGUMENT
         R = R + c*(A-B)
         IF ( X<0 ) R = -R
         RETURN
      CASE (3)
!        LANDEN TRANSFORMATION
         R = aa*geo + R
         sgeo = ari*geo
         aa = an
         aari = ari
!        ARITHMETIC MEAN
         ari = geo + ari
!        SUM OF SINE VALUES
         an = (R/ari+aa)*0.5
         aang = abs(ang)
         ang = -sgeo/ang + ang
         pima = pim
         IF ( ang<0 ) THEN
         ELSEIF ( ang==0 ) THEN
            ang = -1.E-8*aang
         ELSE
            spag_nextblock_1 = 4
            CYCLE SPAG_DispatchLoop_1
         ENDIF
         pim = pim + 3.1415927
         isi = isi + 1
         spag_nextblock_1 = 4
      CASE (4)
         aang = ari*ari + ang*ang
         p = d/sqrt(aang)
         IF ( isi>=4 ) isi = isi - 4
         IF ( isi>=2 ) p = -p
         c = c + p
         d = d*(aari-geo)*0.5/ari
         IF ( abs(aari-geo)<=1.E-4*aari ) THEN
!        ACCURACY WAS SUFFICIENT
            R = (atan(ari/ang)+pim)*an/ari
            c = c + d*ang/aang
            spag_nextblock_1 = 2
            CYCLE SPAG_DispatchLoop_1
         ELSE
            sgeo = sqrt(sgeo)
!        GEOMETRIC MEAN
            geo = sgeo + sgeo
            pim = pim + pima
            isi = isi + isi
            spag_nextblock_1 = 3
            CYCLE SPAG_DispatchLoop_1
         ENDIF
      END SELECT
   ENDDO SPAG_DispatchLoop_1
END SUBROUTINE eli2

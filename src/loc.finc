!*==loc.f90 processed by SPAG 8.01RF 00:35  2 Mar 2025

!
!     ..................................................................
!
!        SUBROUTINE LOC
!
!        PURPOSE
!           COMPUTE A VECTOR SUBSCRIPT FOR AN ELEMENT IN A MATRIX OF
!           SPECIFIED STORAGE MODE
!
!        USAGE
!           CALL LOC (I,J,IR,N,M,MS)
!
!        DESCRIPTION OF PARAMETERS
!           I   - ROW NUMBER OF ELEMENT
!           J   - COLUMN NUMBER  OF ELEMENT
!           IR  - RESULTANT VECTOR SUBSCRIPT
!           N   - NUMBER OF ROWS IN MATRIX
!           M   - NUMBER OF COLUMNS IN MATRIX
!           MS  - ONE DIGIT NUMBER FOR STORAGE MODE OF MATRIX
!                  0 - GENERAL
!                  1 - SYMMETRIC
!                  2 - DIAGONAL
!
!        REMARKS
!           NONE
!
!        SUBROUTINES AND FUNCTION SUBPROGRAMS REQUIRED
!           NONE
!
!        METHOD
!           MS=0   SUBSCRIPT IS COMPUTED FOR A MATRIX WITH N*M ELEMENTS
!                  IN STORAGE (GENERAL MATRIX)
!           MS=1   SUBSCRIPT IS COMPUTED FOR A MATRIX WITH N*(N+1)/2 IN
!                  STORAGE (UPPER TRIANGLE OF SYMMETRIC MATRIX). IF
!                  ELEMENT IS IN LOWER TRIANGULAR PORTION, SUBSCRIPT IS
!                  CORRESPONDING ELEMENT IN UPPER TRIANGLE.
!           MS=2   SUBSCRIPT IS COMPUTED FOR A MATRIX WITH N ELEMENTS
!                  IN STORAGE (DIAGONAL ELEMENTS OF DIAGONAL MATRIX).
!                  IF ELEMENT IS NOT ON DIAGONAL (AND THEREFORE NOT IN
!                  STORAGE), IR IS SET TO ZERO.
!
!     ..................................................................
!
SUBROUTINE loc(I,J,Ir,N,M,Ms)
   IMPLICIT NONE

   INTEGER I,Ir,irx,ix,J,jx,M,Ms,N

!
   ix = I
   jx = J
   IF ( Ms<1 ) THEN
      irx = N*(jx-1) + ix
   ELSEIF ( Ms==1 ) THEN
      IF ( ix<jx ) THEN
         irx = ix + (jx*jx-jx)/2
      ELSE
         irx = jx + (ix*ix-ix)/2
      ENDIF
   ELSE
      irx = 0
      IF ( ix==jx ) irx = ix
   ENDIF
   Ir = irx
END SUBROUTINE loc

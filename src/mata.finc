!*==mata.f90 processed by SPAG 8.01RF 00:35  2 Mar 2025

!
!     ..................................................................
!
!        SUBROUTINE MATA
!
!        PURPOSE
!           PREMULTIPLY A MATRIX BY ITS TRANSPOSE TO FORM A
!           SYMMETRIC MATRIX
!
!        USAGE
!           CALL MATA(A,R,N,M,MS)
!
!        DESCRIPTION OF PARAMETERS
!           A  - NAME OF INPUT MATRIX
!           R  - NAME OF OUTPUT MATRIX
!           N  - NUMBER OF ROWS IN A
!           M  - NUMBER OF COLUMNS IN A. ALSO NUMBER OF ROWS AND
!                NUMBER OF COLUMNS OF R.
!           MS  - ONE DIGIT NUMBER FOR STORAGE MODE OF MATRIX A
!                  0 - GENERAL
!                  1 - SYMMETRIC
!                  2 - DIAGONAL
!
!        REMARKS
!           MATRIX R CANNOT BE IN THE SAME LOCATION AS MATRIX A
!           MATRIX R IS ALWAYS A SYMMETRIC MATRIX WITH A STORAGE MODE=1
!
!        SUBROUTINES AND FUNCTION SUBPROGRAMS REQUIRED
!           LOC
!
!        METHOD
!           CALCULATION OF (A TRANSPOSE A) RESULTS IN A SYMMETRIC MATRIX
!           REGARDLESS OF THE STORAGE MODE OF THE INPUT MATRIX. THE
!           ELEMENTS OF MATRIX A ARE NOT CHANGED.
!
!     ..................................................................
!
SUBROUTINE mata(A,R,N,M,Ms)
   IMPLICIT NONE

   REAL A,R
   INTEGER i,ia,ib,ir,j,k,kx,M,Ms,N

   DIMENSION A(*),R(*)
!
   DO k = 1,M
      kx = (k*k-k)/2
      DO j = 1,M
         IF ( j>k ) GOTO 20
         ir = j + kx
         R(ir) = 0
         DO i = 1,N
            IF ( Ms/=0 ) THEN
               CALL loc(i,j,ia,N,M,Ms)
               CALL loc(i,k,ib,N,M,Ms)
               IF ( ia==0 ) CYCLE
               IF ( ib==0 ) CYCLE
            ELSE
               ia = N*(j-1) + i
               ib = N*(k-1) + i
            ENDIF
            R(ir) = R(ir) + A(ia)*A(ib)
 20      ENDDO
      ENDDO
   ENDDO
END SUBROUTINE mata

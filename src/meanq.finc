!*==meanq.f90 processed by SPAG 8.01RF 00:35  2 Mar 2025

!
!     ..................................................................
!
!        SUBROUTINE MEANQ
!
!        PURPOSE
!           COMPUTE SUM OF SQUARES, DEGREES OF FREEDOM, AND MEAN SQUARE
!           USING THE MEAN SQUARE OPERATOR.  THIS SUBROUTINE NORMALLY
!           FOLLOWS CALLS TO AVDAT AND AVCAL SUBROUTINES IN THE PER-
!           FORMANCE OF ANALYSIS OF VARIANCE FOR A COMPLETE FACTORIAL
!           DESIGN.
!
!        USAGE
!           CALL MEANQ (K,LEVEL,X,GMEAN,SUMSQ,NDF,SMEAN,MSTEP,KOUNT,
!                        LASTS)
!
!        DESCRIPTION OF PARAMETERS
!           K     - NUMBER OF VARIABLES (FACTORS). K MUST BE .GT. ONE.
!           LEVEL - INPUT VECTOR OF LENGTH K CONTAINING LEVELS (CATE-
!                   GORIES) WITHIN EACH VARIABLE.
!           X     - INPUT VECTOR CONTAINING THE RESULT OF THE SIGMA AND
!                   DELTA OPERATORS. THE LENGTH OF X IS
!                   (LEVEL(1)+1)*(LEVEL(2)+1)*...*(LEVEL(K)+1).
!           GMEAN - OUTPUT VARIABLE CONTAINING GRAND MEAN.
!           SUMSQ - OUTPUT VECTOR CONTAINING SUMS OF SQUARES.  THE
!                   LENGTH OF SUMSQ IS 2 TO THE K-TH POWER MINUS ONE,
!                   (2**K)-1.
!           NDF   - OUTPUT VECTOR CONTAINING DEGREES OF FREEDOM.  THE
!                   LENGTH OF NDF IS 2 TO THE K-TH POWER MINUS ONE,
!                   (2**K)-1.
!           SMEAN - OUTPUT VECTOR CONTAINING MEAN SQUARES.  THE
!                   LENGTH OF SMEAN IS 2 TO THE K-TH POWER MINUS ONE,
!                   (2**K)-1.
!           MSTEP - WORKING VECTOR OF LENGTH K.
!           KOUNT - WORKING VECTOR OF LENGTH K.
!           LASTS - WORKING VECTOR OF LENGTH K.
!
!        REMARKS
!           THIS SUBROUTINE MUST FOLLOW SUBROUTINE AVCAL
!
!        SUBROUTINES AND FUNCTION SUBPROGRAMS REQUIRED
!           NONE
!
!        METHOD
!           THE METHOD IS BASED ON THE TECHNIQUE DISCUSSED BY H. O.
!           HARTLEY IN 'MATHEMATICAL METHODS FOR DIGITAL COMPUTERS',
!           EDITED BY A. RALSTON AND H. WILF, JOHN WILEY AND SONS,
!           1962, CHAPTER 20.
!
!     ..................................................................
!
SUBROUTINE meanq(K,Level,X,Gmean,Sumsq,Ndf,Smean,Mstep,Kount,Lasts)
   IMPLICIT NONE

   REAL fn,fn1,fn2,Gmean,Smean,Sumsq,X
   INTEGER i,K,Kount,l,Lasts,Level,ll,Mstep,n,nd1,nd2,Ndf,nn

   DIMENSION Level(*),X(*),Sumsq(*),Ndf(*),Smean(*),Mstep(*),Kount(*),Lasts(*)
!
!        ...............................................................
!
!        IF A DOUBLE PRECISION VERSION OF THIS ROUTINE IS DESIRED, THE
!        C IN COLUMN 1 SHOULD BE REMOVED FROM THE DOUBLE PRECISION
!        STATEMENT WHICH FOLLOWS.
!
!     DOUBLE PRECISION X,GMEAN,SUMSQ,SMEAN,FN1
!
!        THE C MUST ALSO BE REMOVED FROM DOUBLE PRECISION STATEMENTS
!        APPEARING IN OTHER ROUTINES USED IN CONJUNCTION WITH THIS
!        ROUTINE.
!
!        ...............................................................
!
!     CALCULATE TOTAL NUMBER OF DATA
!
   n = Level(1)
   DO i = 2,K
      n = n*Level(i)
   ENDDO
!
!     SET UP CONTROL FOR MEAN SQUARE OPERATOR
!
   Lasts(1) = Level(1)
   DO i = 2,K
      Lasts(i) = Level(i) + 1
   ENDDO
   nn = 1
!
!     CLEAR THE AREA TO STORE SUMS OF SQUARES
!
   ll = (2**K) - 1
   Mstep(1) = 1
   DO i = 2,K
      Mstep(i) = Mstep(i-1)*2
   ENDDO
   DO i = 1,ll
      Sumsq(i) = 0.0
   ENDDO
!
!     PERFORM MEAN SQUARE OPERATOR
!
   DO i = 1,K
      Kount(i) = 0
   ENDDO
   SPAG_Loop_1_2: DO
      l = 0
      DO i = 1,K
         IF ( Kount(i)/=Lasts(i) ) THEN
            IF ( l<=0 ) THEN
               Kount(i) = Kount(i) + 1
               IF ( Kount(i)<=Level(i) ) THEN
                  l = l + Mstep(i)
                  CYCLE
               ENDIF
            ELSE
               IF ( Kount(i)/=Level(i) ) l = l + Mstep(i)
               CYCLE
            ENDIF
         ENDIF
         Kount(i) = 0
      ENDDO
      IF ( l<=0 ) THEN
!
!     CALCULATE THE GRAND MEAN
!
         fn = n
         Gmean = X(nn)/fn
!
!     CALCULATE FIRST DIVISOR REQUIRED TO FORM SUM OF SQUARES AND SECOND
!     DIVISOR, WHICH IS EQUAL TO DEGREES OF FREEDOM, REQUIRED TO FORM
!     MEAN SQUARES
!
         DO i = 2,K
            Mstep(i) = 0
         ENDDO
         nn = 0
         Mstep(1) = 1
         SPAG_Loop_2_1: DO
            nd1 = 1
            nd2 = 1
            DO i = 1,K
               IF ( Mstep(i)/=0 ) THEN
                  nd1 = nd1*Level(i)
                  nd2 = nd2*(Level(i)-1)
               ENDIF
            ENDDO
            fn1 = n*nd1
            fn2 = nd2
            nn = nn + 1
            Sumsq(nn) = Sumsq(nn)/fn1
            Ndf(nn) = nd2
            Smean(nn) = Sumsq(nn)/fn2
            IF ( nn<ll ) THEN
               DO i = 1,K
                  IF ( Mstep(i)/=0 ) THEN
                     Mstep(i) = 0
                  ELSE
                     Mstep(i) = 1
                     CYCLE SPAG_Loop_2_1
                  ENDIF
               ENDDO
            ENDIF
            EXIT SPAG_Loop_1_2
         ENDDO SPAG_Loop_2_1
      ELSE
         Sumsq(l) = Sumsq(l) + X(nn)*X(nn)
         nn = nn + 1
      ENDIF
   ENDDO SPAG_Loop_1_2
END SUBROUTINE meanq

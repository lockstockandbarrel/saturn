!*==dpecs.f90 processed by SPAG 8.01RF 00:35  2 Mar 2025

!
!     ..................................................................
!
!        SUBROUTINE DPECS
!
!        PURPOSE
!           ECONOMIZATION OF A POLYNOMIAL FOR UNSYMMETRIC RANGE
!
!        USAGE
!           CALL DPECS(P,N,BOUND,EPS,TOL,WORK)
!
!        DESCRIPTION OF PARAMETERS
!           P     - DOUBLE PRECISION COEFFICIENT VECTOR OF GIVEN
!                   POLYNOMIAL
!           N     - DIMENSION OF COEFFICIENT VECTOR P
!           BOUND - SINGLE PRECISION RIGHT HAND BOUNDARY OF INTERVAL
!           EPS   - SINGLE PRECISION INITIAL ERROR BOUND
!           TOL   - SINGLE PRECISION TOLERANCE FOR ERROR
!           WORK  - DOUBLE PRECISION WORKING STORAGE OF DIMENSION N
!
!        REMARKS
!           THE INITIAL COEFFICIENT VECTOR P IS REPLACED BY THE
!           ECONOMIZED VECTOR.
!           THE INITIAL ERROR BOUND EPS IS REPLACED BY A FINAL
!           ERROR BOUND.
!           N IS REPLACED BY THE DIMENSION OF THE REDUCED POLYNOMIAL.
!           IN CASE OF AN ARBITRARY INTERVAL (XL,XR) IT IS NECESSARY
!           FIRST TO CALCULATE THE EXPANSION OF THE GIVEN POLYNOMIAL
!           WITH ARGUMENT X IN POWERS OF T = (X-XL).
!           THIS IS ACCOMPLISHED THROUGH SUBROUTINE DPCLD.
!           OPERATION IS BYPASSED IN CASE OF N LESS THAN 1.
!
!        SUBROUTINES AND FUNCTION SUBPROGRAMS REQUIRED
!           NONE
!
!        METHOD
!           SUBROUTINE DPECS TAKES AN (N-1)ST DEGREE POLYNOMIAL
!           APPROXIMATION TO A FUNCTION F(X) VALID WITHIN A TOLERANCE
!           EPS OVER THE INTERVAL (0,BOUND) AND REDUCES IT IF POSSIBLE
!           TO A POLYNOMIAL OF LOWER DEGREE VALID WITHIN TOLERANCE
!           TOL.
!           THE COEFFICIENT VECTOR OF THE N-TH SHIFTED CHEBYSHEV
!           POLYNOMIAL IS CALCULATED FROM THE RECURSION FORMULA
!           A(K) = -A(K+1)*K*L*(2*K-1)/(2*(N+K-1)*(N-K+1)).
!           REFERENCE
!           K. A. BRONS, ALGORITHM 37, TELESCOPE 1, CACM VOL. 4, 1961,
!           NO. 3, PP. 151.
!
!     ..................................................................
!
SUBROUTINE dpecs(P,N,Bound,Eps,Tol,Work)
   IMPLICIT NONE

   REAL Bound,Eps,fk,fl,fn,Tol
   INTEGER j,k,N,nend

!
   DIMENSION P(*),Work(*)
   DOUBLE PRECISION P,Work
!
   fl = Bound*0.5
   SPAG_Loop_1_1: DO
!
!        TEST OF DIMENSION
!
      IF ( N<1 ) THEN
         RETURN
      ELSEIF ( N==1 ) THEN
!
         IF ( Eps+abs(sngl(P(1)))<=Tol ) THEN
            N = 0
            Eps = Eps + abs(sngl(P(1)))
         ENDIF
         EXIT SPAG_Loop_1_1
      ELSE
!
!        CALCULATE EXPANSION OF CHEBYSHEV POLYNOMIAL
!
         nend = N - 1
         Work(N) = -P(N)
         DO j = 1,nend
            k = N - j
            fn = (nend-1+k)*(N-k)
            fk = k*(k+k-1)
            Work(k) = -Work(k+1)*dble(fk)*dble(fl)/dble(fn)
         ENDDO
!
!        TEST FOR FEASIBILITY OF REDUCTION
!
         fn = dabs(Work(1))
         IF ( Eps+fn>Tol ) EXIT SPAG_Loop_1_1
!
!        REDUCE POLYNOMIAL
!
         Eps = Eps + fn
         N = nend
         DO j = 1,nend
            P(j) = P(j) + Work(j)
         ENDDO
      ENDIF
   ENDDO SPAG_Loop_1_1
   RETURN
END SUBROUTINE dpecs

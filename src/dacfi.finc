!*==dacfi.f90 processed by SPAG 8.01RF 00:35  2 Mar 2025

!
!     ..................................................................
!
!        SUBROUTINE DACFI
!
!        PURPOSE
!           TO INTERPOLATE FUNCTION VALUE Y FOR A GIVEN ARGUMENT VALUE
!           X USING A GIVEN TABLE (ARG,VAL) OF ARGUMENT AND FUNCTION
!           VALUES.
!
!        USAGE
!           CALL DACFI (X,ARG,VAL,Y,NDIM,EPS,IER)
!
!        DESCRIPTION OF PARAMETERS
!           X      - THE ARGUMENT VALUE SPECIFIED BY INPUT.
!           ARG    - THE INPUT VECTOR (DIMENSION NDIM) OF ARGUMENT
!                    VALUES OF THE TABLE (POSSIBLY DESTROYED).
!           VAL    - THE INPUT VECTOR (DIMENSION NDIM) OF FUNCTION
!                    VALUES OF THE TABLE (DESTROYED).
!           Y      - THE RESULTING INTERPOLATED FUNCTION VALUE.
!           NDIM   - AN INPUT VALUE WHICH SPECIFIES THE NUMBER OF
!                    POINTS IN TABLE (ARG,VAL).
!           EPS    - AN INPUT CONSTANT WHICH IS USED AS UPPER BOUND
!                    FOR THE ABSOLUTE ERROR.
!           IER    - A RESULTING ERROR PARAMETER.
!        NOTE: ARG,VAL,X,Y,Z,P1,P2,P3,Q1,Q2,Q3,AUX,H ARE DOUBLE PREC.
!        REMARKS
!           (1) TABLE (ARG,VAL) SHOULD REPRESENT A SINGLE-VALUED
!               FUNCTION AND SHOULD BE STORED IN SUCH A WAY, THAT THE
!               DISTANCES ABS(ARG(I)-X) INCREASE WITH INCREASING
!               SUBSCRIPT I. TO GENERATE THIS ORDER IN TABLE (ARG,VAL),
!               SUBROUTINES ATSG, ATSM OR ATSE COULD BE USED IN A
!               PREVIOUS STAGE.
!           (2) NO ACTION BESIDES ERROR MESSAGE IN CASE NDIM LESS
!               THAN 1.
!           (3) INTERPOLATION IS TERMINATED EITHER IF THE DIFFERENCE
!               BETWEEN TWO SUCCESSIVE INTERPOLATED VALUES IS
!               ABSOLUTELY LESS THAN TOLERANCE EPS, OR IF THE ABSOLUTE
!               VALUE OF THIS DIFFERENCE STOPS DIMINISHING, OR AFTER
!               (NDIM-1) STEPS (THE NUMBER OF POSSIBLE STEPS IS
!               DIMINISHED IF AT ANY STAGE INFINITY ELEMENT APPEARS IN
!               THE DOWNWARD DIAGONAL OF INVERTED-DIFFERENCES-SCHEME
!               AND IF IT IS IMPOSSIBLE TO ELIMINATE THIS INFINITY
!               ELEMENT BY INTERCHANGING OF TABLE POINTS).
!               FURTHER IT IS TERMINATED IF THE PROCEDURE DISCOVERS TWO
!               ARGUMENT VALUES IN VECTOR ARG WHICH ARE IDENTICAL.
!               DEPENDENT ON THESE FOUR CASES, ERROR PARAMETER IER IS
!               CODED IN THE FOLLOWING FORM
!                IER=0 - IT WAS POSSIBLE TO REACH THE REQUIRED
!                        ACCURACY (NO ERROR).
!                IER=1 - IT WAS IMPOSSIBLE TO REACH THE REQUIRED
!                        ACCURACY BECAUSE OF ROUNDING ERRORS.
!                IER=2 - IT WAS IMPOSSIBLE TO CHECK ACCURACY BECAUSE
!                        NDIM IS LESS THAN 2, OR THE REQUIRED ACCURACY
!                        COULD NOT BE REACHED BY MEANS OF THE GIVEN
!                        TABLE. NDIM SHOULD BE INCREASED.
!                IER=3 - THE PROCEDURE DISCOVERED TWO ARGUMENT VALUES
!                        IN VECTOR ARG WHICH ARE IDENTICAL.
!
!        SUBROUTINES AND FUNCTION SUBPROGRAMS REQUIRED
!           NONE
!
!        METHOD
!           INTERPOLATION IS DONE BY CONTINUED FRACTIONS AND INVERTED-
!           DIFFERENCES-SCHEME. ON RETURN Y CONTAINS AN INTERPOLATED
!           FUNCTION VALUE AT POINT X, WHICH IS IN THE SENSE OF REMARK
!           (3) OPTIMAL WITH RESPECT TO GIVEN TABLE. FOR REFERENCE, SEE
!           F.B.HILDEBRAND, INTRODUCTION TO NUMERICAL ANALYSIS,
!           MCGRAW-HILL, NEW YORK/TORONTO/LONDON, 1956, PP.395-406.
!
!     ..................................................................
!
SUBROUTINE dacfi(X,Arg,Val,Y,Ndim,Eps,Ier)
   IMPLICIT NONE

   REAL delt1,delt2,Eps
   INTEGER i,Ier,ii,iii,j,jend,Ndim

!
   DOUBLE PRECISION Arg,Val,X,Y,z,p1,p2,p3,q1,q2,q3,aux,h
   DIMENSION Arg(*),Val(*)
   Ier = 2
   IF ( Ndim<=0 ) RETURN
   Y = Val(1)
   delt2 = 0.
   IF ( Ndim<=1 ) RETURN
!
!     PREPARATIONS FOR INTERPOLATION LOOP
   p2 = 1.0D0
   p3 = Y
   q2 = 0.0D0
   q3 = 1.0D0
!
!
!     START INTERPOLATION LOOP
   DO i = 2,Ndim
      ii = 0
      p1 = p2
      p2 = p3
      q1 = q2
      q2 = q3
      z = Y
      delt1 = delt2
      jend = i - 1
      SPAG_Loop_2_1: DO
!
!     COMPUTATION OF INVERTED DIFFERENCES
         aux = Val(i)
         DO j = 1,jend
            h = Val(i) - Val(j)
            IF ( dabs(h)<=1.E-6*dabs(Val(i)) ) THEN
               IF ( Arg(i)==Arg(j) ) THEN
                  CALL spag_block_1
                  RETURN
               ENDIF
               IF ( j<jend ) THEN
!
!     COMPUTATION OF VAL(I) IN CASE VAL(I)=VAL(J) AND J LESS THAN I-1
                  Val(i) = 1.D75
               ELSE
!
!     INTERCHANGE ROW I WITH ROW I+II
                  ii = ii + 1
                  iii = i + ii
                  IF ( iii>Ndim ) THEN
                     CALL spag_block_3
                     RETURN
                  ENDIF
                  Val(i) = Val(iii)
                  Val(iii) = aux
                  aux = Arg(i)
                  Arg(i) = Arg(iii)
                  Arg(iii) = aux
                  CYCLE SPAG_Loop_2_1
               ENDIF
            ELSE
!
!     COMPUTATION OF VAL(I) IN CASE VAL(I) NOT EQUAL TO VAL(J)
               Val(i) = (Arg(i)-Arg(j))/h
            ENDIF
         ENDDO
!     INVERTED DIFFERENCES ARE COMPUTED
!
!     COMPUTATION OF NEW Y
         p3 = Val(i)*p2 + (X-Arg(i-1))*p1
         q3 = Val(i)*q2 + (X-Arg(i-1))*q1
         IF ( q3/=0 ) THEN
            Y = p3/q3
         ELSE
            Y = 1.D75
         ENDIF
         delt2 = dabs(z-Y)
         IF ( delt2<=Eps ) THEN
            CALL spag_block_3
            RETURN
         ENDIF
         IF ( i<8 ) EXIT SPAG_Loop_2_1
         IF ( delt2>=delt1 ) THEN
            CALL spag_block_2
            RETURN
         ENDIF
         EXIT SPAG_Loop_2_1
      ENDDO SPAG_Loop_2_1
   ENDDO
!     END OF INTERPOLATION LOOP
!
!
   RETURN
CONTAINS
   SUBROUTINE spag_block_1
!
!     THERE ARE TWO IDENTICAL ARGUMENT VALUES IN VECTOR ARG
      Ier = 3
      RETURN
   END SUBROUTINE spag_block_1
   SUBROUTINE spag_block_2
!
!     TEST VALUE DELT2 STARTS OSCILLATING
      Y = z
      Ier = 1
      RETURN
   END SUBROUTINE spag_block_2
   SUBROUTINE spag_block_3
!
!     THERE IS SATISFACTORY ACCURACY WITHIN NDIM-1 STEPS
      Ier = 0
   END SUBROUTINE spag_block_3
END SUBROUTINE dacfi

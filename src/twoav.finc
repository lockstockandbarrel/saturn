!*==twoav.f90 processed by SPAG 8.01RF 00:35  2 Mar 2025

!
!     ..................................................................
!
!        SUBROUTINE TWOAV
!
!        PURPOSE
!           TEST WHETHER A NUMBER OF SAMPLES ARE FROM THE SAME
!           POPULATION BY THE FRIEDMAN TWO-WAY ANALYSIS OF VARIANCE TEST
!
!        USAGE
!           CALL TWOAV(A,R,N,M,W,XR,NDF,NR)
!
!        DESCRIPTION OF PARAMETERS
!           A   - INPUT MATRIX, N BY M, OF ORIGINAL DATA
!           R   - OUTPUT MATRIX, N BY M, OF RANKED DATA
!           N   - NUMBER OF GROUPS
!           M   - NUMBER OF CASES IN EACH GROUP
!           W   - WORK AREA OF LENGTH 2*M
!           XR  - FRIEDMAN STATISTIC (OUTPUT)
!           NDF - NUMBER OF DEGREES OF FREEDOM (OUTPUT)
!           NR  - CODE, 0 FOR UNRANKED DATA IN A, 1 FOR RANKED DATA
!                 IN A (INPUT)
!
!        REMARKS
!           NONE
!
!        SUBROUTINES AND FUNCTION SUBPROGRAMS REQUIRED
!           RANK
!
!        METHOD
!           DESCRIBED IN S. SIEGEL, 'NONPARAMETRIC STATISTICS FOR THE
!           BEHAVIORAL SCIENCES', MCGRAW-HILL, NEW YORK, 1956,
!           CHAPTER 7
!
!     ..................................................................
!
SUBROUTINE twoav(A,R,N,M,W,Xr,Ndf,Nr)
   IMPLICIT NONE

   REAL A,fm,fnm,R,rt,rtsq,W,Xr
   INTEGER i,ij,ik,ir,iw,j,M,N,Ndf,nm,Nr

   DIMENSION A(*),R(*),W(*)
!
!        DETERMINE WHETHER DATA IS RANKED
!
   IF ( Nr/=1 ) THEN
!
!        RANK DATA IN EACH GROUP AND ASSIGN TIED OBSERVATIONS AVERAGE
!        OF TIED RANK
!
      DO i = 1,N
         ij = i - N
         ik = ij
         DO j = 1,M
            ij = ij + N
            W(j) = A(ij)
         ENDDO
         CALL rank(W,W(M+1),M)
         DO j = 1,M
            ik = ik + N
            iw = M + j
            R(ik) = W(iw)
         ENDDO
      ENDDO
   ELSE
      nm = N*M
      DO i = 1,nm
         R(i) = A(i)
      ENDDO
   ENDIF
!
!        CALCULATE SUM OF SQUARES OF SUMS OF RANKS
!
   rtsq = 0.0
   ir = 0
   DO j = 1,M
      rt = 0.0
      DO i = 1,N
         ir = ir + 1
         rt = rt + R(ir)
      ENDDO
      rtsq = rtsq + rt*rt
   ENDDO
!
!        CALCULATE FRIEDMAN TEST VALUE, XR
!
   fnm = N*(M+1)
   fm = M
   Xr = (12.0/(fm*fnm))*rtsq - 3.0*fnm
!
!        FIND DEGREES OF FREEDOM
!
   Ndf = M - 1
END SUBROUTINE twoav

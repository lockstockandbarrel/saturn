!*==dsinv.f90 processed by SPAG 8.01RF 00:35  2 Mar 2025

!
!     ..................................................................
!
!        SUBROUTINE DSINV
!
!        PURPOSE
!           INVERT A GIVEN SYMMETRIC POSITIVE DEFINITE MATRIX
!
!        USAGE
!           CALL DSINV(A,N,EPS,IER)
!
!        DESCRIPTION OF PARAMETERS
!           A      - DOUBLE PRECISION UPPER TRIANGULAR PART OF GIVEN
!                    SYMMETRIC POSITIVE DEFINITE N BY N COEFFICIENT
!                    MATRIX.
!                    ON RETURN A CONTAINS THE RESULTANT UPPER
!                    TRIANGULAR MATRIX IN DOUBLE PRECISION.
!           N      - THE NUMBER OF ROWS (COLUMNS) IN GIVEN MATRIX.
!           EPS    - SINGLE PRECISION INPUT CONSTANT WHICH IS USED
!                    AS RELATIVE TOLERANCE FOR TEST ON LOSS OF
!                    SIGNIFICANCE.
!           IER    - RESULTING ERROR PARAMETER CODED AS FOLLOWS
!                    IER=0  - NO ERROR
!                    IER=-1 - NO RESULT BECAUSE OF WRONG INPUT PARAME-
!                             TER N OR BECAUSE SOME RADICAND IS NON-
!                             POSITIVE (MATRIX A IS NOT POSITIVE
!                             DEFINITE, POSSIBLY DUE TO LOSS OF SIGNI-
!                             FICANCE)
!                    IER=K  - WARNING WHICH INDICATES LOSS OF SIGNIFI-
!                             CANCE. THE RADICAND FORMED AT FACTORIZA-
!                             TION STEP K+1 WAS STILL POSITIVE BUT NO
!                             LONGER GREATER THAN ABS(EPS*A(K+1,K+1)).
!
!        REMARKS
!           THE UPPER TRIANGULAR PART OF GIVEN MATRIX IS ASSUMED TO BE
!           STORED COLUMNWISE IN N*(N+1)/2 SUCCESSIVE STORAGE LOCATIONS.
!           IN THE SAME STORAGE LOCATIONS THE RESULTING UPPER TRIANGU-
!           LAR MATRIX IS STORED COLUMNWISE TOO.
!           THE PROCEDURE GIVES RESULTS IF N IS GREATER THAN 0 AND ALL
!           CALCULATED RADICANDS ARE POSITIVE.
!
!        SUBROUTINES AND FUNCTION SUBPROGRAMS REQUIRED
!           DMFSD
!
!        METHOD
!           SOLUTION IS DONE USING FACTORIZATION BY SUBROUTINE DMFSD.
!
!     ..................................................................
!
SUBROUTINE dsinv(A,N,Eps,Ier)
   IMPLICIT NONE

   REAL Eps
   INTEGER i,Ier,ind,ipiv,j,k,kend,l,lanf,lhor,lver,min,N

!
!
   DIMENSION A(*)
   DOUBLE PRECISION A,din,work
!
!        FACTORIZE GIVEN MATRIX BY MEANS OF SUBROUTINE DMFSD
!        A = TRANSPOSE(T) * T
   CALL dmfsd(A,N,Eps,Ier)
   IF ( Ier>=0 ) THEN
!
!        INVERT UPPER TRIANGULAR MATRIX T
!        PREPARE INVERSION-LOOP
      ipiv = N*(N+1)/2
      ind = ipiv
!
!        INITIALIZE INVERSION-LOOP
      DO i = 1,N
         din = 1.D0/A(ipiv)
         A(ipiv) = din
         min = N
         kend = i - 1
         lanf = N - kend
         IF ( kend>0 ) THEN
            j = ind
!
!        INITIALIZE ROW-LOOP
            DO k = 1,kend
               work = 0.D0
               min = min - 1
               lhor = ipiv
               lver = j
!
!        START INNER LOOP
               DO l = lanf,min
                  lver = lver + 1
                  lhor = lhor + l
                  work = work + A(lver)*A(lhor)
               ENDDO
!        END OF INNER LOOP
!
               A(j) = -work*din
               j = j - min
            ENDDO
         ENDIF
!        END OF ROW-LOOP
!
         ipiv = ipiv - min
         ind = ind - 1
      ENDDO
!        END OF INVERSION-LOOP
!
!        CALCULATE INVERSE(A) BY MEANS OF INVERSE(T)
!        INVERSE(A) = INVERSE(T) * TRANSPOSE(INVERSE(T))
!        INITIALIZE MULTIPLICATION-LOOP
      DO i = 1,N
         ipiv = ipiv + i
         j = ipiv
!
!        INITIALIZE ROW-LOOP
         DO k = i,N
            work = 0.D0
            lhor = j
!
!        START INNER LOOP
            DO l = k,N
               lver = lhor + k - i
               work = work + A(lhor)*A(lver)
               lhor = lhor + l
            ENDDO
!        END OF INNER LOOP
!
            A(j) = work
            j = j + k
         ENDDO
      ENDDO
   ENDIF
!        END OF ROW- AND MULTIPLICATION-LOOP
!
END SUBROUTINE dsinv

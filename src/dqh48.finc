!*==dqh48.f90 processed by SPAG 8.01RF 00:35  2 Mar 2025

!
!     ..................................................................
!
!        SUBROUTINE DQH48
!
!        PURPOSE
!           TO COMPUTE INTEGRAL(EXP(-X*X)*FCT(X), SUMMED OVER X FROM
!                               -INFINITY TO +INFINITY).
!
!        USAGE
!           CALL DQH48 (FCT,Y)
!           PARAMETER FCT REQUIRES AN EXTERNAL STATEMENT
!
!        DESCRIPTION OF PARAMETERS
!           FCT    - THE NAME OF AN EXTERNAL DOUBLE PRECISION FUNCTION
!                    SUBPROGRAM USED.
!           Y      - THE RESULTING DOUBLE PRECISION INTEGRAL VALUE.
!
!        REMARKS
!           NONE
!
!        SUBROUTINES AND FUNCTION SUBPROGRAMS REQUIRED
!           THE EXTERNAL DOUBLE PRECISION FUNCTION SUBPROGRAM FCT(X)
!           MUST BE FURNISHED BY THE USER.
!
!        METHOD
!           EVALUATION IS DONE BY MEANS OF 48-POINT GAUSSIAN-HERMITE
!           QUADRATURE FORMULA, WHICH INTEGRATES EXACTLY WHENEVER
!           FCT(X) IS A POLYNOMIAL UP TO DEGREE 95.
!           FOR REFERENCE, SEE
!           SHAO/CHEN/FRANK, TABLES OF ZEROS AND GAUSSIAN WEIGHTS OF
!           CERTAIN ASSOCIATED LAGUERRE POLYNOMIALS AND THE RELATED
!           GENERALIZED HERMITE POLYNOMIALS, IBM TECHNICAL REPORT
!           TR00.1100 (MARCH 1964), PP.213-214.
!
!     ..................................................................
!
SUBROUTINE dqh48(fct,Y)
   IMPLICIT NONE
!
!
   DOUBLE PRECISION x,Y,z,fct
!
   x = .8975315081931687D1
   z = -x
   Y = .7935551460773997D-35*(fct(x)+fct(z))
   x = .8310752190704784D1
   z = -x
   Y = Y + .59846126933138784D-30*(fct(x)+fct(z))
   x = .7759295519765775D1
   z = -x
   Y = Y + .36850360801506699D-26*(fct(x)+fct(z))
   x = .7266046554164350D1
   z = -x
   Y = Y + .55645774689022848D-23*(fct(x)+fct(z))
   x = .68100645780741414D1
   z = -x
   Y = Y + .31883873235051384D-20*(fct(x)+fct(z))
   x = .63805640961864106D1
   z = -x
   Y = Y + .8730159601186677D-18*(fct(x)+fct(z))
   x = .59710722250135454D1
   z = -x
   Y = Y + .13151596226584085D-15*(fct(x)+fct(z))
   x = .55773169812237286D1
   z = -x
   Y = Y + .11975898654791794D-13*(fct(x)+fct(z))
   x = .51962877187923645D1
   z = -x
   Y = Y + .70469325815458891D-12*(fct(x)+fct(z))
   x = .48257572281332095D1
   z = -x
   Y = Y + .28152965378381691D-10*(fct(x)+fct(z))
   x = .44640145469344589D1
   z = -x
   Y = Y + .7930467495165382D-9*(fct(x)+fct(z))
   x = .41097046035605902D1
   z = -x
   Y = Y + .16225141358957698D-7*(fct(x)+fct(z))
   x = .37617264902283578D1
   z = -x
   Y = Y + .24686589936697505D-6*(fct(x)+fct(z))
   x = .34191659693638846D1
   z = -x
   Y = Y + .28472586917348481D-5*(fct(x)+fct(z))
   x = .30812489886451058D1
   z = -x
   Y = Y + .25285990277484889D-4*(fct(x)+fct(z))
   x = .27473086248223832D1
   z = -x
   Y = Y + .17515043180117283D-3*(fct(x)+fct(z))
   x = .24167609048732165D1
   z = -x
   Y = Y + .9563923198194153D-3*(fct(x)+fct(z))
   x = .20890866609442764D1
   z = -x
   Y = Y + .41530049119775525D-2*(fct(x)+fct(z))
   x = .17638175798953000D1
   z = -x
   Y = Y + .14444961574981099D-1*(fct(x)+fct(z))
   x = .14405252201375652D1
   z = -x
   Y = Y + .40479676984603849D-1*(fct(x)+fct(z))
   x = .11188121524021566D1
   z = -x
   Y = Y + .9182229707928518D-1*(fct(x)+fct(z))
   x = .7983046277785622D0
   z = -x
   Y = Y + .16920447194564111D0*(fct(x)+fct(z))
   x = .47864633759449610D0
   z = -x
   Y = Y + .25396154266475910D0*(fct(x)+fct(z))
   x = .15949293584886247D0
   z = -x
   Y = Y + .31100103037796308D0*(fct(x)+fct(z))
END SUBROUTINE dqh48

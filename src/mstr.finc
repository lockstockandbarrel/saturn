!*==mstr.f90 processed by SPAG 8.01RF 00:35  2 Mar 2025

!
!     ..................................................................
!
!        SUBROUTINE MSTR
!
!        PURPOSE
!           CHANGE STORAGE MODE OF A MATRIX
!
!        USAGE
!           CALL MSTR(A,R,N,MSA,MSR)
!
!        DESCRIPTION OF PARAMETERS
!           A - NAME OF INPUT MATRIX
!           R - NAME OF OUTPUT MATRIX
!           N - NUMBER OF ROWS AND COLUMNS IN A AND R
!           MSA - ONE DIGIT NUMBER FOR STORAGE MODE OF MATRIX A
!                  0 - GENERAL
!                  1 - SYMMETRIC
!                  2 - DIAGONAL
!           MSR - SAME AS MSA EXCEPT FOR MATRIX R
!
!        REMARKS
!           MATRIX R CANNOT BE IN THE SAME LOCATION AS MATRIX A
!           MATRIX A MUST BE A SQUARE MATRIX
!
!        SUBROUTINES AND FUNCTION SUBPROGRAMS REQUIRED
!           LOC
!
!        METHOD
!           MATRIX A IS RESTRUCTURED TO FORM MATRIX R.
!            MSA MSR
!             0   0  MATRIX A IS MOVED TO MATRIX R
!             0   1  THE UPPER TRIANGLE ELEMENTS OF A GENERAL MATRIX
!                    ARE USED TO FORM A SYMMETRIC MATRIX
!             0   2  THE DIAGONAL ELEMENTS OF A GENERAL MATRIX ARE USED
!                    TO FORM A DIAGONAL MATRIX
!             1   0  A SYMMETRIC MATRIX IS EXPANDED TO FORM A GENERAL
!                    MATRIX
!             1   1  MATRIX A IS MOVED TO MATRIX R
!             1   2  THE DIAGONAL ELEMENTS OF A SYMMETRIC MATRIX ARE
!                    USED TO FORM A DIAGONAL MATRIX
!             2   0  A DIAGONAL MATRIX IS EXPANDED BY INSERTING MISSING
!                    ZERO ELEMENTS TO FORM A GENERAL MATRIX
!             2   1  A DIAGONAL MATRIX IS EXPANDED BY INSERTING MISSING
!                    ZERO ELEMENTS TO FORM A SYMMETRIC MATRIX
!             2   2  MATRIX A IS MOVED TO MATRIX R
!
!     ..................................................................
!
SUBROUTINE mstr(A,R,N,Msa,Msr)
   IMPLICIT NONE

   REAL A,R
   INTEGER i,ia,ir,j,Msa,Msr,N

   DIMENSION A(*),R(*)
!
   DO i = 1,N
      DO j = 1,N
!
!        IF R IS GENERAL, FORM ELEMENT
!
         IF ( Msr/=0 ) THEN
!
!        IF IN LOWER TRIANGLE OF SYMMETRIC OR DIAGONAL R, BYPASS
!
            IF ( i>j ) CYCLE
         ENDIF
         CALL loc(i,j,ir,N,N,Msr)
!
!        IF IN UPPER AND OFF DIAGONAL  OF DIAGONAL R, BYPASS
!
         IF ( ir>0 ) THEN
!
!        OTHERWISE, FORM R(I,J)
!
            R(ir) = 0.0
            CALL loc(i,j,ia,N,N,Msa)
!
!        IF THERE IS NO A(I,J), LEAVE R(I,J) AT 0.0
!
            IF ( ia>0 ) R(ir) = A(ia)
         ENDIF
      ENDDO
   ENDDO
END SUBROUTINE mstr

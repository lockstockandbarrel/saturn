!*==radd.f90 processed by SPAG 8.01RF 00:35  2 Mar 2025

!
!     ..................................................................
!
!        SUBROUTINE RADD
!
!        PURPOSE
!           ADD ROW OF ONE MATRIX TO ROW OF ANOTHER MATRIX
!
!        USAGE
!           CALL RADD(A,IRA,R,IRR,N,M,MS,L)
!
!        DESCRIPTION OF PARAMETERS
!           A   - NAME OF INPUT MATRIX
!           IRA - ROW IN MATRIX A TO BE ADDED TO ROW IRR OF MATRIX R
!           R   - NAME OF OUTPUT MATRIX
!           IRR - ROW IN MATRIX R WHERE SUMMATION IS DEVELOPED
!           N   - NUMBER OF ROWS IN A
!           M   - NUMBER OF COLUMNS IN A AND R
!           MS  - ONE DIGIT NUMBER FOR STORAGE MODE OF MATRIX A
!                  0 - GENERAL
!                  1 - SYMMETRIC
!                  2 - DIAGONAL
!           L   - NUMBER OF ROWS IN R
!
!        REMARKS
!           MATRIX R MUST BE A GENERAL MATRIX
!           MATRIX R CANNOT BE IN THE SAME LOCATION AS MATRIX A UNLESS
!           A IS GENERAL
!
!        SUBROUTINES AND FUNCTION SUBPROGRAMS REQUIRED
!           LOC
!
!        METHOD
!           EACH ELEMENT OF ROW IRA OF MATRIX A IS ADDED TO
!           CORRESPONDING ELEMENT OF ROW IRR OF MATRIX R
!
!     ..................................................................
!
SUBROUTINE radd(A,Ira,R,Irr,N,M,Ms,L)
   IMPLICIT NONE

   REAL A,R
   INTEGER ia,ir,Ira,Irr,j,L,M,Ms,N

   DIMENSION A(*),R(*)
!
   ir = Irr - L
   DO j = 1,M
      ir = ir + L
!
!        LOCATE INPUT ELEMENT FOR ANY MATRIX STORAGE MODE
!
      CALL loc(Ira,j,ia,N,M,Ms)
!
!        TEST FOR ZERO ELEMENT IN DIAGONAL MATRIX
!
!
!        ADD ELEMENTS
!
      IF ( ia/=0 ) R(ir) = R(ir) + A(ia)
   ENDDO
END SUBROUTINE radd
